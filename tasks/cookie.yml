- stat:
    checksum_algorithm: sha1
    path: "{{ rabbitmq_cookie_file }}"
  register: cookie

- set_fact:
    cookie_sha1: "{{ rabbitmq_cookie | hash('sha1') }}"

- set_fact:
    existsing_cookie_sha1: "{% if 'checksum' in cookie.stat %}{{ cookie.stat.checksum }}{% endif %}"

- set_fact:
    cookie_needs_to_be_updated: "{{ existsing_cookie_sha1 and cookie.stat.exists and existsing_cookie_sha1 != cookie_sha1 }}"

- debug:
    msg: "stopping rabbitmq before updating cookie"
  notify: Stop rabbitmq
  when: "{{ cookie_needs_to_be_updated }}"

# TODO there is no way to replace cookie without destroying database while a cluster of rabbitmq is running
# - name: Wipe the database
#   when: "{{ cookie_needs_to_be_updated }}"

- meta: flush_handlers
  when: "{{ cookie_needs_to_be_updated }}"

- name: Update erlang cookie
  template:
    src: erlang.cookie.j2
    dest: "{{ rabbitmq_cookie_file }}"
    mode: 0640
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
  notify: Start erlang
  when: "{{ cookie_needs_to_be_updated }}"

- name: Create erlang cookie
  template:
    src: erlang.cookie.j2
    dest: "{{ rabbitmq_cookie_file }}"
    mode: 0640
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
  when: "{{ not cookie.stat.exists }}"
